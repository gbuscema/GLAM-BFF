/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.glam.bff.openapi.wardrobe.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.glam.bff.openapi.wardrobe.model.GarmentDAO;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * OutfitDAO
 */
@JsonPropertyOrder({
  OutfitDAO.JSON_PROPERTY_OUTFIT_ID,
  OutfitDAO.JSON_PROPERTY_USER_ID,
  OutfitDAO.JSON_PROPERTY_NAME,
  OutfitDAO.JSON_PROPERTY_LAYOUT,
  OutfitDAO.JSON_PROPERTY_IS_FAVORITE,
  OutfitDAO.JSON_PROPERTY_GARMENT_LIST
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-11-19T16:15:08.532396+01:00[Europe/Rome]")
public class OutfitDAO {
  public static final String JSON_PROPERTY_OUTFIT_ID = "outfitId";
  private String outfitId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private String userId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_LAYOUT = "layout";
  private String layout;

  public static final String JSON_PROPERTY_IS_FAVORITE = "isFavorite";
  private Boolean isFavorite;

  public static final String JSON_PROPERTY_GARMENT_LIST = "garmentList";
  private List<GarmentDAO> garmentList;

  public OutfitDAO() {
  }

  public OutfitDAO outfitId(String outfitId) {
    
    this.outfitId = outfitId;
    return this;
  }

   /**
   * Get outfitId
   * @return outfitId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OUTFIT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getOutfitId() {
    return outfitId;
  }


  @JsonProperty(JSON_PROPERTY_OUTFIT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOutfitId(String outfitId) {
    this.outfitId = outfitId;
  }


  public OutfitDAO userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUserId(String userId) {
    this.userId = userId;
  }


  public OutfitDAO name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public OutfitDAO layout(String layout) {
    
    this.layout = layout;
    return this;
  }

   /**
   * Get layout
   * @return layout
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLayout() {
    return layout;
  }


  @JsonProperty(JSON_PROPERTY_LAYOUT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLayout(String layout) {
    this.layout = layout;
  }


  public OutfitDAO isFavorite(Boolean isFavorite) {
    
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFavorite() {
    return isFavorite;
  }


  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }


  public OutfitDAO garmentList(List<GarmentDAO> garmentList) {
    
    this.garmentList = garmentList;
    return this;
  }

  public OutfitDAO addGarmentListItem(GarmentDAO garmentListItem) {
    if (this.garmentList == null) {
      this.garmentList = new ArrayList<>();
    }
    this.garmentList.add(garmentListItem);
    return this;
  }

   /**
   * Get garmentList
   * @return garmentList
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GARMENT_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<GarmentDAO> getGarmentList() {
    return garmentList;
  }


  @JsonProperty(JSON_PROPERTY_GARMENT_LIST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGarmentList(List<GarmentDAO> garmentList) {
    this.garmentList = garmentList;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutfitDAO outfitDAO = (OutfitDAO) o;
    return Objects.equals(this.outfitId, outfitDAO.outfitId) &&
        Objects.equals(this.userId, outfitDAO.userId) &&
        Objects.equals(this.name, outfitDAO.name) &&
        Objects.equals(this.layout, outfitDAO.layout) &&
        Objects.equals(this.isFavorite, outfitDAO.isFavorite) &&
        Objects.equals(this.garmentList, outfitDAO.garmentList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(outfitId, userId, name, layout, isFavorite, garmentList);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutfitDAO {\n");
    sb.append("    outfitId: ").append(toIndentedString(outfitId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    layout: ").append(toIndentedString(layout)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    garmentList: ").append(toIndentedString(garmentList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

